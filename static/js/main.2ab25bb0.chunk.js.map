{"version":3,"sources":["components/tasks/TaskRow.js","components/menu/Menu.js","components/footer/Footer.js","alerts/alerts.js","components/tasks/TaskCreator.js","components/users/userRow.js","components/singIn/SinginForm.js","exampleData/example_data.js","App.js","reportWebVitals.js","index.js"],"names":["TaskRow","props","style","background","task","done","className","name","type","checked","onChange","toggleTask","onClick","deleteTask","id","Menu","data-toggle","data-target","aria-controls","aria-expanded","aria-label","display","href","class","width","justifySelf","alignSelf","float","marginRight","cblogout","lineHeight","loggedUser","username","Footer","textAlign","marginLeft","user","taskItems","filter","length","deleteConfirm","a","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","footer","document","getElementById","result","deleteConfirmOption","deletedAlert","inValidTaskName","TaskCreator","useState","newTaskName","setNewTaskName","value","e","target","users","map","usr","select","selectedUser","options","selectedIndex","cb","tasksLength","UserRow","changeUser","Copyright","Typography","variant","color","align","Link","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","SignIn","classes","pass","setPassword","usrname","setUsername","handler","console","log","Container","component","maxWidth","CssBaseline","Avatar","noValidate","TextField","required","fullWidth","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Button","Grid","container","item","xs","Box","mt","fakeUsers","password","active","logged","deletionConfirm","role","fakeTasks","App","setUsers","setTaskItems","find","u","activeUser","setActiveUser","setLoggedUser","t","taskTableRows","deletedTaskId","newTaskItems","isConfirmed","logout","taskName","userName","taskId","foundedUser","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2ab25bb0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nexport const TaskRow = (props) => (\r\n\r\n    <tr style={{background:props.task.done ? \"#88fa9d\" : \"\"}}>\r\n        <td className=\"tdStyle text-center\">{props.task.name}</td>\r\n        <td className=\"tdStyle text-center\">\r\n            <input type=\"checkbox\"\r\n            checked={props.task.done}\r\n            onChange={()=>props.toggleTask(props.task)}/>\r\n        </td>\r\n        <td className=\"tdStyle text-center\">\r\n            <button className=\"btn btn-danger\" onClick={()=>{props.deleteTask(props.task.id)}}>X</button>\r\n        </td>\r\n    </tr>\r\n);\r\n","import React from 'react'\r\nimport './styles.css'\r\n\r\nexport const Menu = (props) =>{\r\n    return <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div style={{display:\"flex\"}}className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div className=\"navbar-nav\">\r\n      <a className=\"nav-item nav-link active\" href=\"#\">Tasks <span class=\"sr-only\"></span></a>\r\n      <a className=\"nav-item nav-link\" href=\"#\">Completed</a>\r\n      <a className=\"nav-item nav-link\" href=\"#\">Deleted</a>\r\n      <a className=\"nav-item nav-link disabled\" href=\"#\">Options</a>\r\n    </div>\r\n    <div style={{width:\"100%\", justifySelf:\"flex-end\", alignSelf:\"center\"}}>\r\n     <button \r\n        style={{float:\"right\", marginRight:\"1rem\"}}\r\n        className=\"btn btn-primary float-rigth\"\r\n        onClick={()=>{props.cblogout()}}\r\n        >Logout\r\n        </button>\r\n      <h4 style={{float:\"right\", lineHeight:\"2.5rem\", marginRight:\"1rem\"}}>{props.loggedUser.username}</h4>\r\n    </div>\r\n    \r\n  </div>\r\n</nav>\r\n\r\n\r\n}","import React from 'react'\r\nimport './styles.css'\r\n\r\nexport const Footer = props =>{\r\n    return <div className=\"footer bg-primary text-white text-center p.4\">\r\n       <h3 style={{textAlign:\"left\", marginLeft:\"5px\", width:\"40%\"}}>User: {props.user}</h3>\r\n        <h3 style={{textAlign:\"left\", marginLeft:\"5px\"}}>Tasks to done:\r\n           {props.taskItems.filter(task => !task.done && task.user === props.user).length}</h3>   \r\n    </div>\r\n}","import Swal from 'sweetalert2';\r\n\r\n\r\nconst deleteConfirm = async (props) =>{\r\n    return ({result: await Swal.fire({\r\n        title: 'Dese eliminar la tarea?',\r\n        text: \"Este cambio no podrá revertirse!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#d33',\r\n        cancelButtonColor:  ' #acb6ae',\r\n        confirmButtonText: 'Si, eliminar!',\r\n        cancelButtonText: 'Cancelar',\r\n        footer: 'No volver a preguntar &nbsp<input type=\"checkbox\" id=\"remember\" />'\r\n    }), deleteConfirmOption:(document.getElementById('remember').checked)})\r\n}\r\n\r\nconst deletedAlert = () =>{\r\n    Swal.fire(\r\n        'Eliminada!',\r\n        'La tarea ha sido eliminada.',\r\n        'success'\r\n    )\r\n}\r\n\r\n\r\n\r\nconst badCredentialsAlert = ()=>{\r\n    Swal.fire({\r\n    icon: 'error',\r\n    title: 'Incorrect credentials!',\r\n    text: 'Please insert your username and password',\r\n  })\r\n}\r\n\r\nconst inValidTaskName = (text)=>{\r\n    Swal.fire({\r\n    icon: 'error',\r\n    title: 'Error al cargar la tarea',\r\n    text: text,\r\n  })\r\n}\r\n\r\nexport {deleteConfirm, deletedAlert, inValidTaskName, badCredentialsAlert}","import { React, useState } from 'react'\r\nimport { inValidTaskName } from \"../../alerts/alerts\";\r\n\r\nimport './styles.css'\r\n\r\nexport const TaskCreator = (props) =>{\r\n const [newTaskName, setNewTaskName ] = useState('')\r\n\r\nconst changeTaskName = (e) =>{\r\n    setNewTaskName(e.target.value)\r\n}\r\n\r\nconst onSendNewTask = () =>{\r\n    if(newTaskName !== \"\"){\r\n        const select = document.getElementById(\"asignedUser\");\r\n        const selectedUser = select.options[select.selectedIndex].value;\r\n        props.cb(newTaskName, selectedUser, props.tasksLength+1)\r\n        setNewTaskName(\"\")\r\n\r\n    } else {\r\n        inValidTaskName('Debe ingresar un nombre para la tarea!')\r\n    }   \r\n}\r\n\r\n    return ( \r\n        <div className=\"creatorStyle form-group m-1\">\r\n            <h5 className=\"styleh5\">New task:</h5>\r\n            <input className=\"inputStyle form-control m-1\" value={newTaskName} onChange={changeTaskName} /> \r\n            <select className=\"m-1\" id=\"asignedUser\">\r\n                {props.users.map(usr =>\r\n                    <option key={usr.username} value={usr.username}>{usr.username}</option>\r\n                )}\r\n            </select>\r\n            <button className=\"btn btn-primary m-1\" onClick={onSendNewTask}>Add task</button>\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\n\r\nexport const UserRow = ({user, changeUser, taskItems}) =>{\r\n\r\n \r\n\r\n return (\r\n    <tr>\r\n        <td>\r\n            <button className=\"btn btn-secondary\" onClick={()=> changeUser(user)} >{user}</button>\r\n            \r\n        </td>\r\n        <td>{taskItems.filter(task => !task.done && task.user === user).length} Pending Task/s</td>\r\n    </tr>\r\n);\r\n }","import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn({cb}) {\r\n  const classes = useStyles();\r\n  \r\n  const [pass, setPassword] = useState(\"\")\r\n  const [usrname, setUsername] = useState(\"\")\r\n  \r\n  const handler = (e) => {\r\n    console.log(e.target.value);\r\n    if(e.target.name===\"username\"){\r\n       setUsername(e.target.value)\r\n    } else if(e.target.name===\"password\"){\r\n       setPassword(e.target.value)\r\n      }\r\n    }\r\n\r\n\r\n  return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n              <Avatar className={classes.avatar}>\r\n                  {/* <LockOutlinedIcon /> */}\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                  Sign in\r\n              </Typography>\r\n              <form className={classes.form} noValidate>\r\n                  <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"username\"\r\n                      label=\"username\"\r\n                      name=\"username\"\r\n                      autoComplete=\"off\"\r\n                      autoFocus\r\n                      onChange={handler}\r\n                  />\r\n                  <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      autoComplete=\"off\"\r\n                      onChange={handler}\r\n                  />\r\n                  <FormControlLabel\r\n                      control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                      label=\"Remember me\"\r\n                  />\r\n                  <Button\r\n                      type=\"submit\"\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                      onClick={() => {\r\n                          cb({\r\n                              usrname,\r\n                              pass,\r\n                          });\r\n                      }}\r\n                  >\r\n                      Sign In\r\n                  </Button>\r\n                  <Grid container>\r\n                      <Grid item xs>\r\n                          <Link href=\"#\" variant=\"body2\">\r\n                              Forgot password?\r\n                          </Link>\r\n                      </Grid>\r\n                      <Grid item>\r\n                          <Link href=\"#\" variant=\"body2\">\r\n                              {\"Don't have an account? Sign Up\"}\r\n                          </Link>\r\n                      </Grid>\r\n                  </Grid>\r\n              </form>\r\n          </div>\r\n          <Box mt={8}>\r\n              <Copyright />\r\n          </Box>\r\n      <h3>\r\n      EXAMPLE STANTARD USERS: <br/> \r\n        username: \"Abril\" password:\"abril\"<br/>\r\n        username: \"Jeremias\" password:\"user\"<br/>\r\n       <br/>               \r\n       EXAMPLE ADMIN USER:<br/>\r\n        username: \"Admin\" password:\"admin\"       \r\n      </h3>\r\n      </Container>\r\n  );\r\n}\r\n","const fakeUsers = [\r\n    {\r\n        username: \"Jeremias\",\r\n        password:\"user\",\r\n        active: false,\r\n        logged: false,\r\n        deletionConfirm: true,\r\n        role: \"regular\",\r\n    },\r\n    {\r\n        username: \"Karla\",\r\n        active: false,\r\n        logged: false,\r\n        deletionConfirm: true,\r\n        role: \"regular\",\r\n    },\r\n    {\r\n        username: \"Abril\",\r\n        password: \"abril\",\r\n        active: false,\r\n        logged: false,\r\n        deletionConfirm: true,\r\n        role: \"regular\",\r\n    },\r\n    {\r\n        username: \"Admin\",\r\n        password:\"admin\",\r\n        active: false,\r\n        logged: false,\r\n        deletionConfirm: true,\r\n        role: \"admin\",\r\n    },\r\n];\r\n\r\nconst fakeTasks = [\r\n    { name: \"task one\", user: \"Jeremias\", done: false, id: 1 },\r\n    { name: \"task two\", user: \"Karla\", done: false, id: 2 },\r\n    { name: \"task three\", user: \"Jeremias\", done: true, id: 3 },\r\n    { name: \"task four\", user: \"Abril\", done: false, id: 4 },\r\n    { name: \"task five\", user: \"Jeremias\", done: false, id: 5 },\r\n    { name: \"task six\", user: \"Karla\", done: false, id: 6 },\r\n    { name: \"task seven\", user: \"Jeremias\", done: false, id: 7 },\r\n    { name: \"task eigth\", user: \"Abril\", done: false, id: 8 },\r\n]\r\n\r\nexport {fakeUsers, fakeTasks};","import { useState } from \"react\";\nimport { TaskRow } from \"./components/tasks/TaskRow\";\nimport { Menu } from \"./components/menu/Menu\";\nimport { Footer } from \"./components/footer/Footer\";\nimport { TaskCreator } from \"./components/tasks/TaskCreator\";\nimport { UserRow } from \"./components/users/userRow\";\nimport { deleteConfirm, deletedAlert, inValidTaskName } from \"./alerts/alerts\";  \nimport \"./App.css\";\nimport SignIn from \"./components/singIn/SinginForm\";\nimport { fakeUsers, fakeTasks } from \"./exampleData/example_data\";\n\nfunction App() {\n    const [users, setUsers] = useState(fakeUsers);\n    const [taskItems, setTaskItems] = useState(fakeTasks);\n    const [activeUser, setActiveUser] = useState(users.find(u => u.logged));\n    const [loggedUser, setLoggedUser] = useState(users.find(u => u.logged));\n\n    const toggleTask = task => {\n        setTaskItems(\n            taskItems.map(t =>\n                t.name === task.name ? { ...t, done: !t.done } : t\n            )\n        );\n    };\n\n    const changeUser = user => {\n        setUsers(\n            users.map(u => {\n                if (u.username === user) {\n                    setActiveUser(u);\n                    return { ...u, active: true };\n                } else {\n                    return { ...u, active: false };\n                }\n            })\n        );\n    };\n\n    const taskTableRows = () => {\n        return taskItems.map(task => {\n            if (task.user === activeUser.username)\n                return (\n                    <TaskRow\n                        key={task.id}\n                        task={task}\n                        activeUser={activeUser.username}\n                        toggleTask={toggleTask}\n                        deleteTask={deleteTask}\n                    />\n                );\n        });\n    };\n\n    const userTableRows = () => {\n        return users.map(user => (\n            <UserRow\n                key={user.username}\n                user={user.username}\n                changeUser={changeUser}\n                taskItems={taskItems}\n            />\n        ));\n    };\n\n    const addNewTask = (taskName, userName, taskId) => {\n        if (!taskItems.find(t => t.name === taskName && t.user === userName)) {\n            setTaskItems([\n                ...taskItems,\n                { name: taskName, user: userName, id: taskId, done: false },\n            ]);\n        } else {\n            inValidTaskName(\"Una tarea con el mismo nombre ya existe!\"); //crear alerts personalizados\n        }\n    };\n\n    const deleteTask = async deletedTaskId => {\n        if (activeUser.deletionConfirm === false) {\n            const newTaskItems = taskItems.filter(\n                task => task.id !== deletedTaskId\n            );\n            setTaskItems(newTaskItems);\n            deletedAlert();\n        } else {\n            const { result, deleteConfirmOption } = await deleteConfirm();\n            if (result.isConfirmed) {\n                const newTaskItems = taskItems.filter(\n                    task => task.id !== deletedTaskId\n                );\n                setTaskItems(newTaskItems);\n                deletedAlert();\n            }\n            if (deleteConfirmOption) {\n                setUsers(\n                    users.map(u => {\n                        if (u.username === activeUser.username) {\n                            setActiveUser({ ...u, deletionConfirm: false });\n                            return { ...u, deletionConfirm: false };\n                        } else {\n                            return u;\n                        }\n                    })\n                );\n\n                console.log(users, activeUser);\n            }\n        }\n    };\n\n    const loginControl =  ({ pass, usrname }) => {\n        //axios.post\n        const foundedUser =  users.find(user => user.username===usrname)\n        if(foundedUser.password === pass){\n            setLoggedUser(foundedUser)\n            setActiveUser(foundedUser) \n        }\n    };\n\n    const logout = () => {\n        setLoggedUser(\"\");\n    };\n\n    //RENDER\n    if (!loggedUser) {\n        return <SignIn cb={loginControl} />;\n    } else {\n        if (loggedUser.role === \"admin\") {\n            return (\n                <div>\n                    <Menu\n                        loggedUser={loggedUser}\n                        cblogout={logout}\n                    />\n                    {loggedUser ? (\n                        <TaskCreator\n                            cb={addNewTask}\n                            users={users}\n                            tasksLength={taskItems.length}\n                        />\n                    ) : (\n                        \"\"\n                    )}\n\n                    <div className=\"divTablesStyle\">\n                        <table className=\"tableStyle table table-striped table-bordered\">\n                            <thead className=\"thStyle\">\n                                <tr>\n                                    <th className=\"thStyle text-center\">\n                                        Description\n                                    </th>\n                                    <th\n                                        style={{ width: \"10px\" }}\n                                        className=\"thStyle text-center\"\n                                    >\n                                        Done\n                                    </th>\n                                    <th\n                                        style={{ width: \"10px\" }}\n                                        className=\"thStyle text-center\"\n                                    >\n                                        Delete\n                                    </th>\n                                </tr>\n                            </thead>\n                            {loggedUser ? <tbody>{taskTableRows()}</tbody> : \"\"}\n                        </table>\n                        <table style={{ marginLeft: \"20px\" }}>\n                            <tr>\n                                <td className=\"bg-primary\" width=\"2\"></td>\n                            </tr>\n                        </table>\n\n                        <table className=\"usersTableStyle table table-striped table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>User</th>\n                                    <th>Tasks</th>\n                                </tr>\n                            </thead>\n                            <tbody>{userTableRows()}</tbody>\n                        </table>\n                    </div>\n                    <Footer user={loggedUser.username} taskItems={taskItems} />\n                </div>\n            );\n        } \n            return (\n                <div>\n                    <Menu loggedUser={loggedUser}\n                        cblogout={logout}/>\n                    <hr />\n                    <div className=\"divTablesStyle\">\n                        <table className=\"tableStyle table table-striped table-bordered\">\n                            <thead className=\"thStyle\">\n                                <tr>\n                                    <th className=\"thStyle text-center\">\n                                        Description\n                                    </th>\n                                    <th\n                                        style={{ width: \"10px\" }}\n                                        className=\"thStyle text-center\"\n                                    >\n                                        Done\n                                    </th>\n                                    <th\n                                        style={{ width: \"10px\" }}\n                                        className=\"thStyle text-center\"\n                                    >\n                                        Delete\n                                    </th>\n                                </tr>\n                            </thead>\n                            {loggedUser ? <tbody>{taskTableRows()}</tbody> : \"\"}\n                        </table>\n                        <table style={{ marginLeft: \"20px\" }}>\n                            <tr>\n                                <td className=\"bg-primary\" width=\"2\"></td>\n                            </tr>\n                        </table>\n                    </div>\n                    <Footer\n                        user={loggedUser ? loggedUser.username : \"\"}\n                        taskItems={taskItems}\n                    />\n                </div>\n            );\n        }\n    }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}