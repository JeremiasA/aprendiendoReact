{"version":3,"sources":["components/TaskRow.js","components/TaskBanner.js","components/TaskCreator.js","components/userRow.js","App.js","reportWebVitals.js","index.js"],"names":["TaskRow","props","style","background","task","done","height","name","type","checked","onChange","toggleTask","bannerStyle","width","textAlign","TaskBanner","className","marginLeft","user","taskItems","filter","length","TaskCreator","useState","newTaskName","setNewTaskName","display","margin","value","e","target","id","users","map","usr","username","onClick","select","document","getElementById","selectedUser","options","selectedIndex","cb","tasksLength","alert","UserRow","changeUser","App","activeUser","setActiveUser","setTaskItems","t","thStyle","taskName","userName","taskId","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fef6c354.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\n\r\nexport const TaskRow = (props) => (\r\n\r\n    <tr style={{background:props.task.done ? \"#88fa9d\" : \"\"}}>\r\n        <td style={{height:\"50px\"}}>{props.task.name}</td>\r\n        <td style={{height:\"50px\"}}>\r\n            <input type=\"checkbox\"\r\n            checked={props.task.done}\r\n            onChange={()=>props.toggleTask(props.task)}/>\r\n        </td>\r\n    </tr>\r\n);\r\n","import React from 'react'\r\n\r\nconst bannerStyle= {\r\n    width:\"100%\",\r\n    height:\"75px\",\r\n    textAlign:\"left\"\r\n}\r\n\r\nexport const TaskBanner = props =>{\r\n    return <h3 style={bannerStyle} className=\"bg-primary text-white text-center p.4\">\r\n       <p style={{textAlign:\"left\", marginLeft:\"5px\"}}>{props.user} Task App [\r\n           {props.taskItems.filter(task => !task.done && task.user === props.user).length} task to done]</p>\r\n    </h3>\r\n}","import { React, useState } from 'react'\r\n\r\nexport const TaskCreator = (props) =>{\r\n const [newTaskName, setNewTaskName ] = useState('')\r\n\r\nconst changeTaskName = (e) =>{\r\n    setNewTaskName(e.target.value)\r\n}\r\n\r\nconst onSendNewTask = () =>{\r\n    if(newTaskName !== \"\"){\r\n        const select = document.getElementById(\"asignedUser\");\r\n        const selectedUser = select.options[select.selectedIndex].value;\r\n        props.cb(newTaskName, selectedUser, props.tasksLength+1)\r\n        setNewTaskName(\"\")\r\n\r\n    } else {\r\n        alert(\"Please insert task name\")\r\n    }   \r\n}\r\n\r\nconst creatorStyle= {\r\n    \r\n    display: \"flex\",\r\n}\r\n\r\nconst inputStyle = {\r\n    width:\"300px\"\r\n}\r\n\r\n    return ( \r\n        <div style={creatorStyle} className=\"form-group m-1\">\r\n            <h5 style={{margin:\".5rem\"}}>New task:</h5>\r\n            <input style={inputStyle} className=\"form-control m-1\" value={newTaskName} onChange={changeTaskName} /> \r\n            <select className=\"m-1\" id=\"asignedUser\">\r\n                {props.users.map(usr =>\r\n                    <option key={usr.username} value={usr.username}>{usr.username}</option>\r\n                )}\r\n            </select>\r\n            <button className=\"btn btn-primary m-1\" onClick={onSendNewTask}>Add task</button>\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\n\r\n\r\n\r\n\r\nexport const UserRow = ({user, changeUser, taskItems}) => (\r\n    <tr>\r\n        <td>\r\n            <button className=\"btn btn-secondary\" onClick={()=> changeUser(user)} >{user}</button>\r\n            \r\n        </td>\r\n        <td>{taskItems.filter(task => !task.done && task.user === user).length} Pending Task/s</td>\r\n    </tr>\r\n);\r\n","import { useState } from \"react\";\nimport { TaskRow } from \"./components/TaskRow\";\nimport { TaskBanner } from './components/TaskBanner'\nimport { TaskCreator } from './components/TaskCreator'\nimport { UserRow } from './components/userRow'\n\n\nfunction App() {\n    const [activeUser, setActiveUser] = useState(\"Jeremias\");\n\n    const [users, setUsers] = useState([\n        {username: \"Jeremias\"},\n        {username: \"Karla\"},\n        {username: \"Abril\"}\n    ]);\n    const [taskItems, setTaskItems] = useState([\n        { name: \"task one\", user: \"Jeremias\",  done: false, id:1 },\n        { name: \"task two\", user:\"Karla\", done: false, id:2 },\n        { name: \"task three\", user: \"Jeremias\",  done: true, id:3 },\n        { name: \"task four\", user:\"Abril\", done: false, id:4 },\n        { name: \"task five\", user: \"Jeremias\",  done: false, id:5 },\n        { name: \"task six\", user:\"Karla\", done: false, id:6 },\n        { name: \"task seven\", user: \"Jeremias\",  done: false, id:7 },\n        { name: \"task eigth\", user:\"Abril\", done: false, id:8 },\n    ]);\n\n    const toggleTask = task =>{\n      setTaskItems(taskItems.map(\n          t => t.name === task.name ? {...t, done : !t.done} : t))\n    }\n\n    const changeUser = user =>{\n        setActiveUser(user)\n      }\n  \n   \n    const taskTableRows = () => {\n        return taskItems.map(task => {\n            if(task.user === activeUser)\n                return <TaskRow key={task.id} task={task} activeUser={activeUser} toggleTask={toggleTask} />\n        }\n        );\n    };\n\n    const userTableRows = () =>{\n        return users.map(user =>\n            <UserRow key={user.username} user={user.username} changeUser={changeUser} taskItems={taskItems}/>);\n    }\n\n    const addNewTask = (taskName, userName, taskId) => {\n        if(!taskItems.find(t => t.name === taskName && t.user === userName)){ \n            setTaskItems([...taskItems, {name:taskName, user: userName, id: taskId, done:false}])\n        } else {\n            alert(\"Task already exists!\") //crear alerts personalizados\n        }\n    }\n\n    \nconst tableStyle= {\n    width:\"70%\",\n    \"maxHeight\": \"20px\",\n    marginLeft:\"20px\"\n}\n\nconst usersTableStyle= {\n    width:\"20%\",\n    \"marginLeft\": \"20px\",\n        \n\n}\n\nconst divTablesStyle = {\n    display:\"flex\",\n}\n\nconst thStyle = {\n    \"maxHeight\": \"10px\"\n}\n\n    return (\n        <div>\n            <TaskBanner user={activeUser} taskItems={taskItems} />\n            <hr />\n            <TaskCreator\n                cb={addNewTask}\n                users={users}\n                tasksLength={taskItems.length}\n            />\n            <hr />\n            <div style={divTablesStyle}>\n                <table\n                    style={tableStyle}\n                    className=\"table table-striped table-bordered\"\n                >\n                    <thead style={thStyle}>\n                        <tr>\n                            <th style={thStyle}>Description</th>\n                            <th style={thStyle}>Done</th>\n                        </tr>\n                    </thead>\n                    <tbody>{taskTableRows()}</tbody>\n                </table>\n                <table style={{marginLeft:\"20px\"}}>\n                    <tr>\n                        <td className=\"bg-primary\" width=\"2\"></td>\n                    </tr>\n                </table>\n                <table\n                    style={usersTableStyle}\n                    className=\"table table-striped table-bordered\"\n                >\n                    <thead>\n                        <tr>\n                            <th>User</th>\n                            <th>Tasks</th>\n                        </tr>\n                    </thead>\n                    <tbody>{userTableRows()}</tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}