{"version":3,"sources":["components/tasks/TaskRow.js","components/tasks/TaskBanner.js","components/tasks/TaskCreator.js","components/users/userRow.js","App.js","reportWebVitals.js","index.js"],"names":["TaskRow","props","style","background","task","done","className","name","type","checked","onChange","toggleTask","onClick","deleteTask","id","TaskBanner","textAlign","marginLeft","user","taskItems","filter","length","TaskCreator","useState","newTaskName","setNewTaskName","value","e","target","users","map","usr","username","select","document","getElementById","selectedUser","options","selectedIndex","cb","tasksLength","alert","UserRow","changeUser","App","activeUser","setActiveUser","setTaskItems","t","deletedTaskId","newTaskItems","taskName","userName","taskId","find","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.30f091b6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nexport const TaskRow = (props) => (\r\n\r\n    <tr style={{background:props.task.done ? \"#88fa9d\" : \"\"}}>\r\n        <td className=\"tdStyle text-center\">{props.task.name}</td>\r\n        <td className=\"tdStyle text-center\">\r\n            <input type=\"checkbox\"\r\n            checked={props.task.done}\r\n            onChange={()=>props.toggleTask(props.task)}/>\r\n        </td>\r\n        <td className=\"tdStyle text-center\">\r\n            <button className=\"btn btn-danger\" onClick={()=>{props.deleteTask(props.task.id)}}>X</button>\r\n        </td>\r\n    </tr>\r\n);\r\n","import React from 'react'\r\nimport './styles.css'\r\n\r\nexport const TaskBanner = props =>{\r\n    return <h3 className=\"bannerStyle bg-primary text-white text-center p.4\">\r\n       <p style={{textAlign:\"left\", marginLeft:\"5px\"}}>{props.user} Task App [\r\n           {props.taskItems.filter(task => !task.done && task.user === props.user).length} task to done]</p>\r\n    </h3>\r\n}","import { React, useState } from 'react'\r\nimport './styles.css'\r\n\r\nexport const TaskCreator = (props) =>{\r\n const [newTaskName, setNewTaskName ] = useState('')\r\n\r\nconst changeTaskName = (e) =>{\r\n    setNewTaskName(e.target.value)\r\n}\r\n\r\nconst onSendNewTask = () =>{\r\n    if(newTaskName !== \"\"){\r\n        const select = document.getElementById(\"asignedUser\");\r\n        const selectedUser = select.options[select.selectedIndex].value;\r\n        props.cb(newTaskName, selectedUser, props.tasksLength+1)\r\n        setNewTaskName(\"\")\r\n\r\n    } else {\r\n        alert(\"Please insert task name\")\r\n    }   \r\n}\r\n\r\n    return ( \r\n        <div className=\"creatorStyle form-group m-1\">\r\n            <h5 className=\"styleh5\">New task:</h5>\r\n            <input className=\"inputStyle form-control m-1\" value={newTaskName} onChange={changeTaskName} /> \r\n            <select className=\"m-1\" id=\"asignedUser\">\r\n                {props.users.map(usr =>\r\n                    <option key={usr.username} value={usr.username}>{usr.username}</option>\r\n                )}\r\n            </select>\r\n            <button className=\"btn btn-primary m-1\" onClick={onSendNewTask}>Add task</button>\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\n\r\nexport const UserRow = ({user, changeUser, taskItems}) => (\r\n    <tr>\r\n        <td>\r\n            <button className=\"btn btn-secondary\" onClick={()=> changeUser(user)} >{user}</button>\r\n            \r\n        </td>\r\n        <td>{taskItems.filter(task => !task.done && task.user === user).length} Pending Task/s</td>\r\n    </tr>\r\n);\r\n","import { useState } from \"react\";\nimport { TaskRow } from \"./components/tasks/TaskRow\";\nimport { TaskBanner } from './components/tasks/TaskBanner'\nimport { TaskCreator } from './components/tasks/TaskCreator'\nimport { UserRow } from './components/users/userRow'\nimport './App.css'\n\n\nfunction App() {\n    const [activeUser, setActiveUser] = useState(\"Jeremias\");\n\n    const [users, setUsers] = useState([\n        {username: \"Jeremias\"},\n        {username: \"Karla\"},\n        {username: \"Abril\"}\n    ]);\n    const [taskItems, setTaskItems] = useState([\n        { name: \"task one\", user: \"Jeremias\",  done: false, id:1 },\n        { name: \"task two\", user:\"Karla\", done: false, id:2 },\n        { name: \"task three\", user: \"Jeremias\",  done: true, id:3 },\n        { name: \"task four\", user:\"Abril\", done: false, id:4 },\n        { name: \"task five\", user: \"Jeremias\",  done: false, id:5 },\n        { name: \"task six\", user:\"Karla\", done: false, id:6 },\n        { name: \"task seven\", user: \"Jeremias\",  done: false, id:7 },\n        { name: \"task eigth\", user:\"Abril\", done: false, id:8 },\n    ]);\n\n    const toggleTask = task =>{\n      setTaskItems(taskItems.map(\n          t => t.name === task.name ? {...t, done : !t.done} : t))\n    }\n\n    const changeUser = user =>{\n        setActiveUser(user)\n      }\n  \n   \n    const taskTableRows = () => {\n        return taskItems.map(task => {\n            if(task.user === activeUser)\n                return <TaskRow\n                 key={task.id}\n                 task={task}\n                 activeUser={activeUser}\n                 toggleTask={toggleTask}\n                 deleteTask={deleteTask}\n                 />\n        }\n        );\n    };\n\n    const userTableRows = () =>{\n        return users.map(user =>\n            <UserRow \n                key={user.username}\n                user={user.username}\n                changeUser={changeUser}\n                \n                taskItems={taskItems}\n            />);\n    }\n\n    const addNewTask = (taskName, userName, taskId) => {\n        if(!taskItems.find(t => t.name === taskName && t.user === userName)){ \n            setTaskItems([...taskItems, {name:taskName, user: userName, id: taskId, done:false}])\n        } else {\n            alert(\"Task already exists!\") //crear alerts personalizados\n        }\n    }\n\n    const deleteTask = (deletedTaskId) =>{\n        const newTaskItems = taskItems.filter(task => task.id !== deletedTaskId)\n        setTaskItems(newTaskItems)\n    }\n\n    return (\n        <div>\n            <TaskBanner user={activeUser} taskItems={taskItems} />\n            <hr />\n            <TaskCreator\n                cb={addNewTask}\n                users={users}\n                tasksLength={taskItems.length}\n            />\n            <hr />\n            <div className=\"divTablesStyle\">\n                <table className=\"tableStyle table table-striped table-bordered\">\n                    <thead className=\"thStyle\">\n                        <tr>\n                            <th className=\"thStyle text-center\">Description</th>\n                            <th style={{width:\"10px\"}} className=\"thStyle text-center\">Done</th>\n                            <th style={{width:\"10px\"}} className=\"thStyle text-center\">Delete</th>\n                        </tr>\n                    </thead>\n                    <tbody>{taskTableRows()}</tbody>\n                </table>\n                <table style={{marginLeft:\"20px\"}}>\n                    <tr>\n                        <td className=\"bg-primary\" width=\"2\"></td>\n                    </tr>\n                </table>\n                <table\n                    className=\"usersTableStyle table table-striped table-bordered\"\n                >\n                    <thead>\n                        <tr>\n                            <th>User</th>\n                            <th>Tasks</th>\n                        </tr>\n                    </thead>\n                    <tbody>{userTableRows()}</tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}